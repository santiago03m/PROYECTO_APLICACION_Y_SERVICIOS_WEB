@page "/Indicador"

<h3 class="text-center mt-4">Gestión de Indicadores</h3>
<div class="d-flex justify-content-end mb-3">
    <button class="btn btn-primary" @onclick="MostrarFormulario">
        <i class="fas fa-plus"></i> Agregar Indicador
    </button>
</div>

@if (mostrarAlerta)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @mensajeAlerta
        <button type="button" class="btn-close" @onclick="() => mostrarAlerta = false"></button>
    </div>
}

@if (indicadores is null)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status"></div>
        <p>Cargando indicadores...</p>
    </div>
}
else if (!indicadores.Any())
{
    <div class="alert alert-info text-center">No hay indicadores disponibles.</div>
}
else
{
    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>#</th>
                <th>ID</th>
                <th>Código</th>
                <th>Nombre</th>
                <th>Objetivo</th>
                <th>Alcance</th>
                <th>Fórmula</th>
                <th>Tipo Indicador</th>
                <th>Unidad Medición</th>
                <th>Meta</th>
                <th>Sentido</th>
                <th>Frecuencia</th>
                <th>Artículo</th>
                <th>Literal</th>
                <th>Numeral</th>
                <th>Parágrafo</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (i, index) in indicadores.Select((i, idx) => (i, idx + 1)))
            {
                <tr>
                    <td>@index</td>
                    <td>@i.Id</td>
                    <td>@i.Codigo</td>
                    <td>@i.Nombre</td>
                    <td>@i.Objetivo</td>
                    <td>@i.Alcance</td>
                    <td>@i.Formula</td>
                    <td>@i.FkIdTipoIndicador</td>
                    <td>@i.FkIdUnidadMedicion</td>
                    <td>@i.Meta</td>
                    <td>@i.FkIdSentido</td>
                    <td>@i.FkIdFrecuencia</td>
                    <td>@i.FkIdArticulo</td>
                    <td>@i.FkIdLiteral</td>
                    <td>@i.FkIdNumeral</td>
                    <td>@i.FkIdParagrafo</td>
                    <td>
                        <button class="btn btn-warning btn-sm me-2" @onclick="() => EditarIndicador(i)">
                            <i class="fas fa-edit"></i> Editar
                        </button>
                        <button class="btn btn-danger btn-sm" @onclick="() => EliminarIndicador(i.Id)">
                            <i class="fas fa-trash"></i> Eliminar
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}

@if (mostrarFormulario)
{
    <div class="modal fade show d-block" tabindex="-1" style="background: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@((indicador.Id == 0) ? "Agregar Indicador" : "Editar Indicador")</h5>
                    <button type="button" class="btn-close" @onclick="Cancelar"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="indicador" OnValidSubmit="GuardarIndicador">
                        <div class="mb-3">
                            <label class="form-label">Código:</label>
                            <InputText class="form-control" @bind-Value="indicador.Codigo" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Nombre:</label>
                            <InputText class="form-control" @bind-Value="indicador.Nombre" required />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Objetivo:</label>
                            <InputTextArea class="form-control" @bind-Value="indicador.Objetivo" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Alcance:</label>
                            <InputTextArea class="form-control" @bind-Value="indicador.Alcance" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Fórmula:</label>
                            <InputTextArea class="form-control" @bind-Value="indicador.Formula" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Tipo Indicador (ID):</label>
                            <InputSelect class="form-select" @bind-Value="indicador.FkIdTipoIndicador" required>
                                <option disabled value="">-- Seleccione --</option>
                                @foreach (var t in tiposIndicadoresDisponibles)
                                {
                                    <option value="@t.Id">@t.Nombre</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Unidad Medición (ID):</label>
                            <InputSelect class="form-select" @bind-Value="indicador.FkIdUnidadMedicion" required>
                                <option disabled value="">-- Seleccione --</option>
                                @foreach (var u in unidadesMedicionDisponibles)
                                {
                                    <option value="@u.Id">@u.Descripcion</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Meta:</label>
                            <InputText class="form-control" @bind-Value="indicador.Meta" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Sentido (ID):</label>
                            <InputSelect class="form-select" @bind-Value="indicador.FkIdSentido" required>
                                <option disabled value="">-- Seleccione --</option>
                                @foreach (var s in sentidosDisponibles)
                                {
                                    <option value="@s.Id">@s.Nombre</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Frecuencia (ID):</label>
                            <InputSelect class="form-select" @bind-Value="indicador.FkIdFrecuencia" required>
                                <option disabled value="">-- Seleccione --</option>
                                @foreach (var f in frecuenciasDisponibles)
                                {
                                    <option value="@f.Id">@f.Nombre</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Artículo (FK):</label>
                            <InputSelect class="form-select" @bind-Value="indicador.FkIdArticulo" required>
                                <option disabled value="">-- Seleccione --</option>
                                @foreach (var a in articulosDisponibles)
                                {
                                    <option value="@a.Id">@a.Nombre</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Literal (FK):</label>
                            <InputSelect class="form-select" @bind-Value="indicador.FkIdLiteral" required>
                                <option disabled value="">-- Seleccione --</option>
                                @foreach (var l in literalesDisponibles)
                                {
                                    <option value="@l.Id">@l.Descripcion</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Numeral (FK):</label>
                            <InputSelect class="form-select" @bind-Value="indicador.FkIdNumeral" required>
                                <option disabled value="">-- Seleccione --</option>
                                @foreach (var n in numeralesDisponibles)
                                {
                                    <option value="@n.Id">@n.Descripcion</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Parágrafo (FK):</label>
                            <InputSelect class="form-select" @bind-Value="indicador.FkIdParagrafo" required>
                                <option disabled value="">-- Seleccione --</option>
                                @foreach (var p in paragrafosDisponibles)
                                {
                                    <option value="@p.Id">@p.Descripcion</option>
                                }
                            </InputSelect>
                        </div>
                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-success me-2">
                                <i class="fas fa-save"></i> Guardar
                            </button>
                            <button type="button" class="btn btn-secondary" @onclick="Cancelar">
                                <i class="fas fa-times"></i> Cancelar
                            </button>
                        </div>
                    </EditForm>

                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Indicador> indicadores = new();
    private List<TipoIndicador> tiposIndicadoresDisponibles = new();
    private List<UnidadMedicion> unidadesMedicionDisponibles = new();
    private List<Sentido> sentidosDisponibles = new();
    private List<Frecuencia> frecuenciasDisponibles = new();
    private List<Articulo> articulosDisponibles = new();
    private List<Literal> literalesDisponibles = new();
    private List<Numeral> numeralesDisponibles = new();
    private List<Paragrafo> paragrafosDisponibles = new();
    private Indicador indicador = new();
    private bool mostrarFormulario = false;
    private string? mensajeAlerta;
    private bool mostrarAlerta = false;

    [Inject] private IRepository Repository { get; set; } = null!;
    [Inject] private NavigationManager NavigationManager { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        var url = "api/Indicador";
        indicadores = await Repository.GetAsync<List<Indicador>>(url);
        tiposIndicadoresDisponibles = await Repository.GetAsync<List<TipoIndicador>>("api/TipoIndicadores");
        unidadesMedicionDisponibles = await Repository.GetAsync<List<UnidadMedicion>>("api/UnidadMedicion");
        sentidosDisponibles = await Repository.GetAsync<List<Sentido>>("api/Sentido");
        frecuenciasDisponibles = await Repository.GetAsync<List<Frecuencia>>("api/Frecuencia");
        articulosDisponibles = await Repository.GetAsync<List<Articulo>>("api/Articulo");
        literalesDisponibles = await Repository.GetAsync<List<Literal>>("api/Literal");
        numeralesDisponibles = await Repository.GetAsync<List<Numeral>>("api/Numeral");
        paragrafosDisponibles = await Repository.GetAsync<List<Paragrafo>>("api/Paragrafo");
    }

    private void MostrarFormulario()
    {
        indicador = new Indicador();
        mostrarFormulario = true;
    }

    private void EditarIndicador(Indicador i)
    {
        indicador = new Indicador
        {
            Id = i.Id,
            Codigo = i.Codigo,
            Nombre = i.Nombre,
            Meta = i.Meta,
            Objetivo = i.Objetivo,
            Alcance = i.Alcance,
            Formula = i.Formula,
            FkIdTipoIndicador = i.FkIdTipoIndicador,
            FkIdUnidadMedicion = i.FkIdUnidadMedicion,
            FkIdSentido = i.FkIdSentido,
            FkIdFrecuencia = i.FkIdFrecuencia,
            FkIdArticulo = i.FkIdArticulo,
            FkIdLiteral = i.FkIdLiteral,
            FkIdNumeral = i.FkIdNumeral,
            FkIdParagrafo = i.FkIdParagrafo
        };
        mostrarFormulario = true;
    }

    private async Task GuardarIndicador()
    {
        mostrarFormulario = false;
        var url1 = "api/Indicador";
        var url2 = $"api/Indicador/{indicador.Id}";

        // No verificar si el Id es 0, sino si es un nuevo indicador basado en el ID de la base de datos
        if (indicador.Id == 0)
        {
            await Repository.PostAsync(url1, indicador);
            mensajeAlerta = "Indicador guardado correctamente";
        }
        else
        {
            await Repository.PutAsync(url2, indicador);
            mensajeAlerta = "Indicador actualizado correctamente";
        }

        indicadores = await Repository.GetAsync<List<Indicador>>(url1);
        mostrarAlerta = true;
    }

    private async Task EliminarIndicador(int id)
    {
        var url1 = "api/Indicador";
        var url2 = $"api/Indicador/{id}";

        await Repository.DeleteAsync(url2);
        indicadores = await Repository.GetAsync<List<Indicador>>(url1);
        mensajeAlerta = "Indicador eliminado correctamente";
        mostrarAlerta = true;
    }

    private void Cancelar()
    {
        mostrarFormulario = false;
    }
}
